box:
  id: razorpay/docker:php7
no-response-timeout: 30
command-timeout: 30
dev:
  steps:
    - internal/shell:
      code: echo "Razorpay Auth Service"
build:
  services:
    - id: mysql
      tag: latest
      env:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: root
  steps:
    - script:
        name: copy env file
        code: cp ./environment/.env.wercker ./environment/.env.testing
    - script:
        name: Export wercker DB env vars to API environment variables
        code: >
          export DB_HOST="$MYSQL_PORT_3306_TCP_ADDR"
          export DB_PORT="$MYSQL_PORT_3306_TCP_PORT"
    - script:
        name: Composer set-up
        code: |
            composer config -g github-oauth.github.com $github_token
            export COMPOSER_CACHE_DIR="$WERCKER_CACHE_DIR/composer" && mkdir -p $COMPOSER_CACHE_DIR
            composer install --no-interaction
    - script:
        name: Run migrations
        code: APP_ENV=testing php artisan migrate
    - script:
        name: Run unit tests
        code: php -d memory_limit=1024M vendor/phpunit/phpunit/phpunit --debug --verbose
    - script:
        name: List directory
        code: ls -lah
  after-steps:
    - slack-notifier:
        url: $SLACK_URL
        channel: tech_bots
        username: wercker
        icon_url: https://cdn.rawgit.com/wantedly/step-pretty-slack-notify/master/icons/$WERCKER_RESULT.jpg
dockerhub-push:
    box:
      id: razorpay/containers:base-nginx-php7
      username: $DOCKERHUB_USER
      password: $DOCKERHUB_PASSWORD
      cmd: /bin/bash
    steps:
      - script:
          name:  Copy app directory
          code: |
            cp -Rp $WERCKER_SOURCE_DIR/* /app/
      - script:
          name: Fix permissions
          code: |
            chown -R nginx.nginx /app
      - script:
          name: Copy entrypoint script
          code: |
            cp /app/dockerconf/boot.sh /app/boot.sh
      - internal/docker-push:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
          repository: razorpay/auth-service
          entrypoint: /app/boot.sh
          ports: 80/tcp
          working-dir: /app/
          tag: ${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT}
      - script:
          name: Docker Image tag
          code: |
            echo "[INFO] Tag for created image:"
            echo "${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT}"
    after-steps:
      - slack-notifier:
          url: $SLACK_URL
          channel: tech_bots
          username: wercker
          icon_url: https://cdn.rawgit.com/wantedly/step-pretty-slack-notify/master/icons/$WERCKER_RESULT.jpg
deploy:
    steps:
      - script:
          name: Check if branch is master
          code: |
            if [ "$APP_ENV" == "prod" ]; then
              if [ "$WERCKER_GIT_BRANCH" != "master" ]; then
                echo "[ERROR] Cannot deploy a non-master branch to prod"
                exit $?
              fi
            fi
      - script:
          name: List directory
          code: ls -lah
      - script:
          name: check vendor dir exists
          code: if [ ! -d vendor ] ; then exit 1 ; fi;
      - script:
          name: check if dotfile rsyncignore exists
          code: if [ ! -f .rsyncignore ] ; then exit 1 ; fi;
      - script:
          name: create commit.txt
          code: git rev-parse HEAD > public/commit.txt
      - nhuray/aws-code-deploy:
          key: $AWS_KEY
          secret: $AWS_SECRET
          region: $AWS_REGION
          application-name: auth-service
          deployment-group-name: $WERCKER_DEPLOYTARGET_NAME
          s3-bucket: "rzp-code-deploy"
      - hashfyre/newrelic-deployment:
          api_key: $NEWRELIC_API_KEY
          app_name: "$APP_ENV-$APP_NAME"
          skip: $SKIP
    after-steps:
      - slack-notifier:
          url: $SLACK_URL
          channel: tech_bots
          username: wercker
          icon_url: https://cdn.rawgit.com/wantedly/step-pretty-slack-notify/master/icons/$WERCKER_RESULT.jpg
